# Server configuration
server:
  port: 8080

# Spring Cloud Gateway configuration
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
            maxAge: 3600
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin
      routes:
        - id: persons-service
          uri: lb://persons-service
          predicates:
            - Path=/api/persons/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: personsServiceCircuitBreaker
                fallbackUri: forward:/fallback/persons
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 100
                redis-rate-limiter.burstCapacity: 200
                key-resolver: "#{@ipKeyResolver}"
            - AddRequestHeader=X-Gateway-Token, ${GATEWAY_TOKEN:default-token}
            - AddResponseHeader=X-Response-Time, $[responseTime]
            - RewritePath=/api/persons/(?<segment>.*), /$\{segment}

        - id: image-requests-service
          uri: lb://image-requests-service
          predicates:
            - Path=/api/images/**
          filters:
            - StripPrefix=1
            - name: CircuitBreaker
              args:
                name: imageRequestsServiceCircuitBreaker
                fallbackUri: forward:/fallback/images
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 50
                redis-rate-limiter.burstCapacity: 100
                key-resolver: "#{@ipKeyResolver}"
            - AddRequestHeader=X-Gateway-Token, ${GATEWAY_TOKEN:default-token}
            - AddResponseHeader=X-Response-Time, $[responseTime]
            - RewritePath=/api/images/(?<segment>.*), /$\{segment}

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8081}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8081/.well-known/jwks.json}

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    database: 0
    timeout: 2000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      personsServiceCircuitBreaker:
        slidingWindowSize: 100
        minimumNumberOfCalls: 10
        permittedNumberOfCallsInHalfOpenState: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      imageRequestsServiceCircuitBreaker:
        slidingWindowSize: 100
        minimumNumberOfCalls: 10
        permittedNumberOfCallsInHalfOpenState: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: INFO
    com.example.gateway: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/api-gateway.log
    max-size: 10MB
    max-history: 7

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
  packages-to-scan: com.example.gateway
  paths-to-match: /api/**

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  max-age: 3600

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-secret-key-here-make-it-long-and-secure-in-production}
  expiration: ${JWT_EXPIRATION:86400000} # 24 hours in milliseconds

# Rate Limit Configuration
rate-limit:
  enabled: true
  default:
    replenish-rate: 100
    burst-capacity: 100
  endpoints:
    persons:
      replenish-rate: 50
      burst-capacity: 50
    images:
      replenish-rate: 30
      burst-capacity: 30