apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
data:
  redis.host: "redis-master"
  redis.port: "6379"
  jwt.expiration: "86400000"
  rate-limit.default.replenish-rate: "100"
  rate-limit.default.burst-capacity: "100"
  rate-limit.persons.replenish-rate: "50"
  rate-limit.persons.burst-capacity: "50"
  rate-limit.images.replenish-rate: "30"
  rate-limit.images.burst-capacity: "30"
---
apiVersion: v1
kind: Secret
metadata:
  name: api-gateway-secrets
type: Opaque
stringData:
  redis.password: "your-redis-password-here"
  jwt.secret: "your-jwt-secret-key-here-make-it-long-and-secure-in-production"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-gateway-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.example.com
    secretName: api-gateway-tls
  rules:
  - host: api.example.com
    http:
      paths:
      - path: /api/?(.*)
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80
      - path: /actuator/?(.*)
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80
      - path: /swagger-ui/?(.*)
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80
      - path: /v3/api-docs/?(.*)
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80 